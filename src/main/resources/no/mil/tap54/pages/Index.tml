<html t:type="layout" title="Welcome!" xmlns:t="http://tapestry.apache.org/schema/tapestry_5_4.xsd">

<div class="row">
	<div class="col-md-8">
		<h3>${message:greeting}</h3>
		<p>Different techniques to easily use different javascript libraries/framework in Tapestry 5.4.</p>
		<p>The complete source code for these examples is at <a href="https://github.com/arvek-xx/tapestry54-javascript-examples" target="_blank">GitHub</a>.</p>
		<p>All categories of examples is listed below.
			<small>(Code in the listings are inserted by<br/>
			<code>&lt;t:OutputRaw value="categoryTypeCode"/&gt;</code>, to maintain indention from <em>Prettyprint</em>)</small></p>
	</div>
	<div class="col-md-4">
		<img src="${asset:context:images/tapestry.png}" alt="${message:greeting}" title="${message:greeting}" height="80" />
	</div>
</div>

<h4>Categories</h4>
<p>Click on an <em>accordion</em> to see:</p>
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" id="headingAngular">
			<h4 class="panel-title">
				<a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseAngular" aria-expanded="true"
					aria-controls="collapseAngular"> AngularJS </a>
			</h4>
		</div>
		<div id="collapseAngular" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingAngular">
			<div class="panel-body">
				<p>
					<t:pagelink page="NgTodo" class="btn btn-primary btn-large">Run AngularJS TodoApp &raquo;</t:pagelink>
					&nbsp;
					<t:pagelink page="NgPhones" class="btn btn-primary btn-large">Run AngularJS PhoneApp &raquo;</t:pagelink>
					&nbsp;
					<t:pagelink page="NgPhones2" class="btn btn-primary btn-large">Run a complete AngularJS PhoneApp &raquo;</t:pagelink>
				</p>
				Eksample code is reused from <a href="https://angularjs.org" target="_blank">https://angularjs.org</a>
				<ul>
					<li>Download <em>angular.js</em> from <a href="https://angularjs.org/" target="_blank">https://angularjs.org</a>
						and place the file in <em>src/main/resources/META-INF/modules/angular.js</em>. The example is using version 1.4.4
					</li>
					<li>Create a file <em>src/main/resources/META-INF/modules/angular-bootstrap.js</em> that bootstrap angular and
						your own angular code
					</li>
					<li>Create a file <em>src/main/resources/META-INF/modules/my-angular-code.js</em> which is your angular code
					</li>
					<li>Create a file <em>src/main/resources/META-INF/assets/my-angular-code.css</em> for decoration
					</li>
					<li>Import <em>angular-bootstrap.js</em> and <em>my-angular-code.css</em> in your class-file:<br/>
						<mark><samp>@Import(module = { "angular-bootstrap" }, stylesheet = { "my-angular-code.css" })</samp></mark> 
					</li>
				</ul>
				<p>
					That's it! Hava a look at the source-code for <span class="badge"><em>angular-bootstrap.js</em></span>
					and <span class="badge"><em>my-angular-code.js</em></span>
				</p>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="angularBootstrapCode"/>
     			</pre>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="angularCode"/>
      			</pre>
			</div>
		</div>
	</div>
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" id="headingReact">
			<h4 class="panel-title">
				<a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseReact" aria-expanded="true"
					aria-controls="collapseReact"> React-Tapestry </a>
			</h4>
		</div>
		<div id="collapseReact" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingReact">
			<div class="panel-body">
				<p>
					<t:pagelink page="ReactComponent" class="btn btn-primary btn-large">Run React (component) &raquo;</t:pagelink>
					&nbsp;
					<t:pagelink page="ReactPlain" class="btn btn-primary btn-large">Run React (plain) &raquo;</t:pagelink>
				</p>
				See: <a href="https://github.com/eddyson-de/tapestry-react" target="_blank">tapestry-react</a>.
				<ul>
					<li>Update dependency in <em>pom.xml</em>:<br/>
						<mark><samp>
							&lt;groupId&gt;de.eddyson&lt;/groupId&gt;<br/>
							&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;tapestry-react&lt;/artifactId&gt;<br/>
							&lt;version&gt;0.1.2&lt;/version&gt;
						</samp></mark> 
					</li>
					<li>Use component in tml-file:<br/>
						<mark><samp>
							&lt;r:reactcomponent module="react/my-react-component-code" name="There..." /&gt;
						</samp></mark>
					</li>
					<li>Create a file <em>src/main/resources/META-INF/modules/react/my-react-component-code.cjsx</em> which is your react code
					</li>
				</ul>
				Alternative, you could use plain jsx-file (See: <a href="https://github.com/eddyson-de/tapestry-react" target="_blank">tapestry-react</a>):
				<ul>
					<li>Update dependency in <em>pom.xml</em>:<br/>
						<mark><samp>
							&lt;groupId&gt;de.eddyson&lt;/groupId&gt;<br/>
							&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;tapestry-react&lt;/artifactId&gt;<br/>
							&lt;version&gt;0.1.2&lt;/version&gt;
						</samp></mark> 
					</li>
					<li>Import <em>my-react-plain-code.jsx</em> in your class-file:<br/>
						<mark><samp>@Import(module = { "react/my-react-plain-code" })</samp></mark>
					</li>
					<li>Create a file <em>src/main/resources/META-INF/modules/react/my-react-plain-code.jsx</em> which is your react code
					</li>
				</ul>
				
				<p>
					That's it! Hava a look at the source-code for <span class="badge"><em>pom.xml</em></span>,
					 <span class="badge"><em>my-react-plain-code.cjsx</em></span>, <span class="badge"><em>ReactComponent.tml</em></span>
				</p>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="reactPomCode"/>
     			</pre>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="reactTapestryJsCode"/>
     			</pre>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="reactTapestryTmlCode"/>
     			</pre>
			</div>
		</div>
	</div>
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" id="headingHigh">
			<h4 class="panel-title">
				<a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseHigh"
					aria-expanded="false" aria-controls="collapseHigh"> Highcharts </a>
			</h4>
		</div>
		<div id="collapseHigh" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingHigh">
			<div class="panel-body">
				<p>
					<t:pagelink page="Highcharts" class="btn btn-primary btn-large">Run Highcharts &raquo;</t:pagelink>
				</p>
				FREE FOR NON-COMMERCIAL. See <a href="http://shop.highsoft.com/highcharts.html" target="_blank">License and
					Pricing</a>.
				<ul>
					<li>Download <em>highcharts.js</em> from <a href="http://www.highcharts.com" target="_blank">http://www.highcharts.com</a>
						and place the file in <em>src/main/resources/META-INF/modules/highcharts.js</em>. The example is using version
						4.1.8
					</li>
					<li>Create a file <em>src/main/resources/META-INF/modules/my-highcharts-code.js</em> which is your highcharts
						code
					</li>
					<li>Import <em>highcharts.js</em> and <em>my-highcharts-code.js</em> in your class-file:<br/>
						<mark><samp>@Import(module = { "highcharts", "my-highcharts-code" })</samp></mark>  
					</li>
				</ul>
				<p>
					That's it! Hava a look at the source-code for <span class="badge"><em>my-highcharts-code.js</em></span>
				</p>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="highchartJsCode"/>
      			</pre>
			</div>
		</div>
	</div>
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" id="headingJchart">
			<h4 class="panel-title">
				<a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseJchart"
					aria-expanded="false" aria-controls="collapseJchart"> JChart </a>
			</h4>
		</div>
		<div id="collapseJchart" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingJchart">
			<div class="panel-body">
				<p>
					<t:pagelink page="Jchart" class="btn btn-primary btn-large">Run Jchart &raquo;</t:pagelink>
				</p>
				<ul>
					<li>Download <em>jchart.js</em> from <a href="https://github.com/ldenison/jchart" target="_blank">https://github.com/ldenison/jchart</a>
						and place the file in <em>src/main/resources/META-INF/modules/jchart.js</em>. 
						Edit the file and insert <code>define(["jquery", "bootstrap/tooltip"], function($, tooltip) {</code> as the first line. 
						After the last line insert <code>})</code>. The example is using the latest version (Luke Denison on 13 May 2014)
					</li>
					<li>Download <em>main.css</em> from <a href="https://github.com/ldenison/jchart" target="_blank">https://github.com/ldenison/jchart</a>
						and place the file in <em>src/main/resources/META-INF/assets/main.css</em>.
					</li>
					<li>Create a file <em>src/main/resources/META-INF/modules/my-jchart-code.js</em> which is your jchart code</li>
					<li>Import <em>jchart.js</em> and <em>my-jchart-code.js</em> and <em>main.css</em> in your class-file:<br/>
						<mark><samp>@Import(module = { "jchart", "my-jchart-code" }, stylesheet = { "main.css" })</samp></mark> 
					</li>
				</ul>
				<p>
					That's it! Hava a look at the source-code for <span class="badge"><em>my-jchart-code.js</em></span>
				</p>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="jchartJsCode"/>
				</pre>
			</div>
		</div>
	</div>
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" id="headingRaph">
			<h4 class="panel-title">
				<a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseRaph"
					aria-expanded="false" aria-controls="collapseRaph"> Raphael </a>
			</h4>
		</div>
		<div id="collapseRaph" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingRaph">
			<div class="panel-body">
				<p>
					<t:pagelink page="Raphael" class="btn btn-primary btn-large">Run Raphael &raquo;</t:pagelink>
				</p>
				<ul>
					<li>Download <em>raphael.js</em> from <a href="http://raphaeljs.com/" target="_blank">http://raphaeljs.com</a>
						and place the file in <em>src/main/resources/META-INF/modules/raphael.js</em>.
						The example is using version 2.1.2
					</li>
					<li>Download <em>g.raphael.js</em> from <a href="http://g.raphaeljs.com/" target="_blank">http://g.raphaeljs.com</a> 
						and place the file in <em>src/main/resources/META-INF/modules/g.raphael.js</em>.
						The example is using version 0.5.1
					</li>
					<li>Download <em>g.bar.js</em> from <a href="http://g.raphaeljs.com/" target="_blank">http://g.raphaeljs.com</a> 
						and place the file in <em>src/main/resources/META-INF/modules/g.bar.js</em>.
						The example is using version 0.5.1
					</li>
					<li>Create a file <em>src/main/resources/META-INF/modules/my-raphael-code.js</em> which is your raphael code.
						This file imports <em>raphael</em>, <em>g.raphael</em> and <em>g.bar</em>:<br/>
						<mark><samp>require([ 'raphael' ], function(Raphael) { require([ 'g.raphael' ], function() { require([ 'g.bar' ], function() {</samp></mark> 
					</li>
					<li>Import <em>my-raphael-code.js</em> in your class-file:<br/>
						<mark><samp>@Import(module = { "my-raphael-code" })</samp></mark> 
					</li>
				</ul>
				<p>
					That's it! Hava a look at the source-code for <span class="badge"><em>my-raphael-code.js</em></span>
				</p>
				<br />
				<pre class="prettyprint linenums">
					<t:OutputRaw value="raphaelJsCode"/>
				</pre>
			</div>
		</div>
	</div>
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" id="headingBootstrap">
			<h4 class="panel-title">
				<a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseBootstrap"
					aria-expanded="false" aria-controls="collapseBootstrap"> Bootstrap and jQuery related JS libraries </a>
			</h4>
		</div>
		<div id="collapseBootstrap" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingBootstrap">
			<div class="panel-body">
				<p>
					<t:pagelink page="Bootstrap" class="btn btn-primary btn-large">Run Bootstrap &raquo;</t:pagelink>
				</p>
				<p>To use eg. Bootstrap popover.js, we must initialize ourself, we only need to do this:</p>
				<ul>
					<li>In the page class (include the modules as needed):<br/>
						<mark><samp>@Import(module = { "bootstrap/popover", "my-popover-code" })</samp></mark>
					</li>
					<li>In the page tml:<br/>
						<mark><samp>&lt;button type="button" class="btn btn-lg btn-primary" data-toggle="popover" id="myPop" title="Bootstrap popover title"
							data-content="And here's some amazing content."&gt;Click to see 'Popover'&lt;/button&gt;
						</samp></mark>
					</li>
					<li>In <em>my-popover-code</em>:<br/>
						<mark><samp>define(["jquery", "bootstrap/popover"], function($, popover) {<br/>
							&nbsp;&nbsp;&nbsp;var $pop = $("#myPop");<br/>
							&nbsp;&nbsp;&nbsp;$pop.popover({placement : 'top'});<br/>
							});
						</samp></mark>
					</li>
				</ul>
				<p>
					That's it! Hava a look at the source-code for <span class="badge"><em>Bootstrap.java</em>,
					 <em>Bootstrap.tml</em>, <em>my-popover-code.js</em></span>
				</p>
				<br/>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="bootstrapClassCode"/>
				</pre>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="bootstrapTmlCode"/>
				</pre>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="bootstrapJsCode"/>
				</pre>
			</div>
		</div>
	</div>
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" id="headingCoffee">
			<h4 class="panel-title">
				<a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseCoffee"
					aria-expanded="false" aria-controls="collapseCoffee"> Coffee (and jQuery) </a>
			</h4>
		</div>
		<div id="collapseCoffee" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingCoffee">
			<div class="panel-body">
				<p>
					<t:pagelink page="Coffee" class="btn btn-primary btn-large">Run Coffee &raquo;</t:pagelink>
				</p>
				<p>To use Coffee script (and JQuery), we only need to do this:</p>
				<ul>
					<li>In the page class (include the modules as needed):<br/>
						<mark><samp>@Import(module = { "my-coffee-code" })</samp></mark>
					</li>
					<li>In <em>my-coffee-code.coffee</em>:<br/>
						<mark><samp>define([ "jquery" ], ($) -></samp></mark>
					</li>
				</ul>
				<p>
					That's it! Hava a look at the source-code for <span class="badge"><em>Coffee.java</em>,
					 <em>Coffee.tml</em>, <em>my-coffee-code.coffee</em></span>
				</p>
				<br/>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="CoffeeClassCode"/>
				</pre>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="CoffeeTmlCode"/>
				</pre>
				<pre class="prettyprint linenums">
					<t:OutputRaw value="CoffeeJsCode"/>
				</pre>
			</div>
		</div>
	</div>
	
</div> <!-- class="panel-group" -->

</html>
